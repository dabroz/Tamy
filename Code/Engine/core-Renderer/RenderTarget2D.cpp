#include "core-Renderer\RenderTarget2D.h"
#include "core-Renderer\Renderer.h"
#include "core-Renderer\RenderResource.h"


///////////////////////////////////////////////////////////////////////////////

BEGIN_ABSTRACT_OBJECT( RenderTarget2D );
   PARENT( ShaderTexture );
END_OBJECT();

///////////////////////////////////////////////////////////////////////////////

RenderTarget2D::RenderTarget2D( TextureUsage usage, bool isReadable, byte renderTexturesCount )
   : m_usage( usage )
   , m_isReadable( isReadable )
   , m_renderTexturesCount( renderTexturesCount )
{
   m_renderResource = RenderResource::instantiate< RenderTarget2D >( this );
}

///////////////////////////////////////////////////////////////////////////////

RenderTarget2D::~RenderTarget2D()
{
   m_renderResource->removeReference();
   m_renderResource = NULL;
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

BEGIN_ABSTRACT_OBJECT( RenderTarget2DStatic );
   PARENT( RenderTarget2D );
END_OBJECT();

///////////////////////////////////////////////////////////////////////////////

RenderTarget2DStatic::RenderTarget2DStatic( uint width, uint height, TextureUsage usage, bool isReadable, byte renderTexturesCount )
   : RenderTarget2D( usage, isReadable, renderTexturesCount )
   , m_width( width )
   , m_height( height )
{
}

///////////////////////////////////////////////////////////////////////////////

RenderTarget2DStatic::~RenderTarget2DStatic()
{
}

///////////////////////////////////////////////////////////////////////////////

void RenderTarget2DStatic::resize( uint width, uint height )
{
   m_width = width;
   m_height = height;

   m_renderResource->setDirty();
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

BEGIN_ABSTRACT_OBJECT( RenderTarget2DDynamic );
   PARENT( RenderTarget2D );
END_OBJECT();

///////////////////////////////////////////////////////////////////////////////

RenderTarget2DDynamic::RenderTarget2DDynamic( Renderer* renderer, float widthScale, float heightScale, TextureUsage usage, bool isReadable, byte renderTexturesCount )
   : RenderTarget2D( usage, isReadable, renderTexturesCount )
   , m_renderer( renderer )
   , m_widthScale( widthScale )
   , m_heightScale( heightScale )
{
}

///////////////////////////////////////////////////////////////////////////////

RenderTarget2DDynamic::~RenderTarget2DDynamic()
{
}

///////////////////////////////////////////////////////////////////////////////

void RenderTarget2DDynamic::resize( float widthScale, float heightScale )
{
   m_widthScale = widthScale;
   m_heightScale = heightScale;

   m_renderResource->setDirty();
}

///////////////////////////////////////////////////////////////////////////////

unsigned int RenderTarget2DDynamic::getWidth() const
{
   return ( uint ) ( m_renderer->getViewportWidth()*m_widthScale );
}

///////////////////////////////////////////////////////////////////////////////

unsigned int RenderTarget2DDynamic::getHeight() const
{
   return ( uint ) ( m_renderer->getViewportHeight()*m_heightScale );
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

RCActivateRenderTarget::RCActivateRenderTarget( const RenderTarget2D* renderTarget )
   : m_renderTarget( renderTarget )
{
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

RCDeactivateRenderTarget::RCDeactivateRenderTarget()
{
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

RCClearRenderTarget::RCClearRenderTarget( const RenderTarget2D* renderTarget, const Color& bgColor )
   : m_renderTarget( renderTarget )
   , m_bgColor( bgColor )
{
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

RCGetPixel::RCGetPixel( const RenderTarget2D* renderTarget, PixelColorQuery* query )
   : m_renderTarget( renderTarget )
   , m_query( query )
{
}

///////////////////////////////////////////////////////////////////////////////

RCGetPixel::~RCGetPixel()
{
}

///////////////////////////////////////////////////////////////////////////////
