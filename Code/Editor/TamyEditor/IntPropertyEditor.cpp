#include "IntPropertyEditor.h"
#include <QtWidgets\QSpinBox>


///////////////////////////////////////////////////////////////////////////////

IntPropertyEditor::IntPropertyEditor( TEditableReflectionProperty< int >* property )
: QPropertyEditor( property->getLabel().c_str() )
, m_property( property )
{
   setupUi();
}

///////////////////////////////////////////////////////////////////////////////

IntPropertyEditor::~IntPropertyEditor()
{
   delete m_property;
   m_property = NULL;
}

///////////////////////////////////////////////////////////////////////////////

void IntPropertyEditor::setupUi()
{
   m_val = new QSpinBox(this); addWidget(m_val);
   m_val->setRange( -INT_MAX, INT_MAX );
   m_val->setValue( m_property->get() );

   connect(m_val, SIGNAL(valueChanged(int)), this, SLOT(valChanged(int)));
}

///////////////////////////////////////////////////////////////////////////////

void IntPropertyEditor::valChanged(int val)
{
   m_property->set( val );
}

///////////////////////////////////////////////////////////////////////////////

void IntPropertyEditor::onPropertyChanged()
{
   m_val->setValue( m_property->get() );
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

UIntPropertyEditor::UIntPropertyEditor( TEditableReflectionProperty< unsigned int >* property )
   : QPropertyEditor( property->getLabel().c_str() )
   , m_property( property )
{
   setupUi();
}

///////////////////////////////////////////////////////////////////////////////

UIntPropertyEditor::~UIntPropertyEditor()
{
   delete m_property;
   m_property = NULL;
}

///////////////////////////////////////////////////////////////////////////////

void UIntPropertyEditor::setupUi()
{
   m_val = new QSpinBox(this); addWidget(m_val);
   m_val->setRange( 0, INT_MAX );
   m_val->setValue( m_property->get() );

   connect(m_val, SIGNAL(valueChanged(int)), this, SLOT(valChanged(int)));
}

///////////////////////////////////////////////////////////////////////////////

void UIntPropertyEditor::valChanged(int val)
{
   m_property->set( val );
}

///////////////////////////////////////////////////////////////////////////////

void UIntPropertyEditor::onPropertyChanged()
{
   m_val->setValue( m_property->get() );
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

LongPropertyEditor::LongPropertyEditor( TEditableReflectionProperty< long >* property )
   : QPropertyEditor( property->getLabel().c_str() )
   , m_property( property )
{
   setupUi();
}

///////////////////////////////////////////////////////////////////////////////

LongPropertyEditor::~LongPropertyEditor()
{
   delete m_property;
   m_property = NULL;
}

///////////////////////////////////////////////////////////////////////////////

void LongPropertyEditor::setupUi()
{
   m_val = new QSpinBox(this); addWidget(m_val);
   m_val->setRange( -LONG_MAX, LONG_MAX );
   m_val->setValue( m_property->get() );

   connect(m_val, SIGNAL(valueChanged(int)), this, SLOT(valChanged(int)));
}

///////////////////////////////////////////////////////////////////////////////

void LongPropertyEditor::valChanged(int val)
{
   m_property->set( val );
}

///////////////////////////////////////////////////////////////////////////////

void LongPropertyEditor::onPropertyChanged()
{
   m_val->setValue( m_property->get() );
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

ULongPropertyEditor::ULongPropertyEditor( TEditableReflectionProperty< unsigned long >* property )
   : QPropertyEditor( property->getLabel().c_str() )
   , m_property( property )
{
   setupUi();
}

///////////////////////////////////////////////////////////////////////////////

ULongPropertyEditor::~ULongPropertyEditor()
{
   delete m_property;
   m_property = NULL;
}

///////////////////////////////////////////////////////////////////////////////

void ULongPropertyEditor::setupUi()
{
   m_val = new QSpinBox(this); addWidget(m_val);
   m_val->setRange( 0, LONG_MAX );
   m_val->setValue( m_property->get() );

   connect(m_val, SIGNAL(valueChanged(int)), this, SLOT(valChanged(int)));
}

///////////////////////////////////////////////////////////////////////////////

void ULongPropertyEditor::valChanged(int val)
{
   m_property->set( val );
}

///////////////////////////////////////////////////////////////////////////////

void ULongPropertyEditor::onPropertyChanged()
{
   m_val->setValue( m_property->get() );
}

///////////////////////////////////////////////////////////////////////////////
