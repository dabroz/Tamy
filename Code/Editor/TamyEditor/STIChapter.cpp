#include "STIChapter.h"
#include "ext-StoryTeller\StoryChapter.h"


///////////////////////////////////////////////////////////////////////////////

STIChapter::STIChapter( StoryChapter& chapter )
   : m_chapter( chapter )
{
   updateDescription();
}

///////////////////////////////////////////////////////////////////////////////

STIChapter::~STIChapter()
{
}

///////////////////////////////////////////////////////////////////////////////

StoryNode* STIChapter::getNode()
{
   return &m_chapter;
}

///////////////////////////////////////////////////////////////////////////////

void STIChapter::addNode( StoryNode* newNode )
{
   if ( newNode )
   {
      m_chapter.add( newNode );
   }
}

///////////////////////////////////////////////////////////////////////////////

void STIChapter::insertNode( int insertionIdx, StoryNode* nodeToInsert )
{
   m_chapter.insert( insertionIdx, nodeToInsert );
}

///////////////////////////////////////////////////////////////////////////////

void STIChapter::removeNode( StoryBrowserTreeItem* removedChildItem )
{
   if ( !removedChildItem )
   {
      return;
   }

   StoryNode* removedNode = removedChildItem->getNode();
   m_chapter.remove( removedNode );
}

///////////////////////////////////////////////////////////////////////////////

void STIChapter::clear()
{
   m_chapter.clear();
}

///////////////////////////////////////////////////////////////////////////////
